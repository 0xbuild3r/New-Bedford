syntax = "proto3";

package new_bedford;

message LiquidateRequest {
  // Can send multiple liquidation candidates at once
  repeated LiquidationCandidate candidates = 1;
}

message LiquidateReply {
  // Success signalled by gRPC status code
}

message LiquidationCandidate {
  // Token prices, signatures, and messages (from Coinbase) corresponding to the ones that were used to determine liquidatability
  repeated TokenData tokens = 1;
  // Profitability (to determine maximum allowed transaction fee)
  double profitability = 2;
  // Candidate address
  string candidateAddress = 3;
  // Address of token to repay
  string repayTokenAddress = 4;
  // Address of token to seize
  string seizeTokenAddress = 5;
}

message TokenData {
  // An instance of token data, signature, and message (from Coinbase) corresponding to the ones that were used to determine liquidatability
  string tokenAddress = 1;
  // TODO: Is this the appropriate data format for holding the signature and the message?
  bytes signature = 2;
  bytes message = 3;
}

service TxManager {
  // Send the candidates in bulk. If multiple queries come in, the service will be able to update it's parameters.
  rpc submitCandidates (LiquidateRequest) returns (LiquidateReply) {}
}